<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="programScheduleDAO">
	<!-- 프로그램 일정 등록 -->
	<insert id="insertProgramSchedule" parameterType="programScheduleVO">
		<selectKey keyProperty="idx" resultType="String" order="BEFORE">
			SELECT 'PSCHD-' || COALESCE(
				(
					SELECT (SUBSTRING(idx FROM 7))::int + 1
					FROM program_schedule
					ORDER BY (SUBSTRING(idx FROM 7))::int DESC
					LIMIT 1
					FOR UPDATE
				), 1)
		</selectKey>
		INSERT INTO program_schedule
			(idx, create_user_idx, program_idx, start_datetime, end_datetime, capacity, created_at, updated_at)
		VALUES
			(#{idx}, #{createUserIdx}, #{programIdx}, #{startDatetime}, #{endDatetime}, #{capacity}, NOW(), NOW())
	</insert>
	
	<!-- 겹치는 프로그램 일정 개수 조회(검증용)  -->
	<select id="countOverlap" parameterType="map" resultType="int">
		SELECT COUNT(*) FROM program_schedule
		WHERE program_idx = #{programIdx}
			AND start_datetime <![CDATA[<]]> #{endDatetime}
			AND end_datetime <![CDATA[>]]> #{startDatetime}
	</select>
	
	<!-- 프로그램 idx로 프로그램 일정 목록 조회 -->
	<select id="selectProgramScheduleListByProgramIdx" parameterType="String" resultType="programScheduleVO">
		SELECT
			ps.idx,
			ps.create_user_idx,
			ps.program_idx,
			ps.start_datetime,
			ps.end_datetime,
			ps.capacity,
			(
				SELECT COUNT(*)
				FROM booking bi
				INNER JOIN booker be ON bi.idx = be.booking_idx -- INNER JOIN으로 혹여 booker 없는 booking이 있으면 무시
				WHERE bi.program_schedule_idx = ps.idx
			) AS bookerCount,
			ps.created_at AS createdAt,
			ps.updated_at AS updatedAt
		FROM program_schedule ps
		WHERE program_idx = #{programIdx}
	</select>
	
	<!-- 특정 날짜의 프로그램 일정 목록 조회 -->
	<select id="selectProgramScheduleListByProgramIdxAndDate" parameterType="map" resultType="programScheduleVO">
		SELECT
			idx,
			create_user_idx,
			program_idx,
			start_datetime,
			end_datetime,
			capacity,
			created_at AS createdAt,
			updated_at AS updatedAt
		FROM program_schedule
		WHERE program_idx = #{programIdx}
			AND DATE(start_datetime) = #{date}
		ORDER BY start_datetime;
	</select>
	
	<!-- 특정 달의 프로그램 일정 목록 조회 -->
	<select id="selectProgramScheduleListByProgramIdxAndMonth" parameterType="map" resultType="programScheduleVO">
		SELECT
			idx,
			create_user_idx,
			program_idx,
			start_datetime,
			end_datetime,
			capacity,
			created_at AS createdAt,
			updated_at AS updatedAt
		FROM program_schedule
		WHERE program_idx = #{programIdx}
			AND TO_CHAR(start_datetime, 'YYYY-MM') = #{month}
		ORDER BY start_datetime;
	</select>

	<!-- 프로그램 일정 상세 조회 -->
	<select id="selectProgramSchedule" parameterType="String" resultType="programScheduleVO">
		SELECT
			ps.idx,
			ps.create_user_idx,
			ps.program_idx,
			ps.start_datetime,
			ps.end_datetime,
			ps.capacity,
			(
				SELECT COUNT(*) FROM booking bi WHERE bi.program_schedule_idx = ps.idx 
			) AS bookingCount,
			(
				SELECT COUNT(*)
				FROM booking bi
				INNER JOIN booker be ON bi.idx = be.booking_idx
				WHERE bi.program_schedule_idx = ps.idx
			) AS bookerCount,
			ps.created_at AS createdAt,
			ps.updated_at AS updatedAt
		FROM program_schedule ps
		WHERE idx = #{idx}
	</select>

	<!-- 프로그램 일정 수정 -->
	<update id="updateProgramSchedule" parameterType="programScheduleVO">
		UPDATE program_schedule
		SET capacity = #{capacity},
			updated_at = NOW()
		WHERE idx = #{idx}
	</update>

	<!-- 프로그램 일정 삭제(요구사항에는 없긴한데) -->
	<delete id="deleteProgramSchedule" parameterType="String">
		DELETE FROM program_schedule WHERE idx = #{idx}
	</delete>
	
</mapper>